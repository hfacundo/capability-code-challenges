<?xml version="1.0" encoding="UTF-8"?>
<testng-results ignored="0" total="16" passed="16" failed="0" skipped="0">
  <reporter-output>
  </reporter-output>
  <suite started-at="2024-09-24T10:53:46 CST" name="Surefire suite" finished-at="2024-09-24T10:53:46 CST" duration-ms="78">
    <groups>
    </groups>
    <test started-at="2024-09-24T10:53:46 CST" name="Surefire test" finished-at="2024-09-24T10:53:46 CST" duration-ms="78">
      <class name="com.challenge.easy.arrays.FindWordsContainingCharacterTest">
        <test-method signature="numIdenticalPairsTest()[pri:0, instance:com.challenge.easy.arrays.FindWordsContainingCharacterTest@45dd4eda]" started-at="2024-09-24T10:53:46 CST" name="numIdenticalPairsTest" finished-at="2024-09-24T10:53:46 CST" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- numIdenticalPairsTest -->
      </class> <!-- com.challenge.easy.arrays.FindWordsContainingCharacterTest -->
      <class name="com.challenge.easy.dynamic.PascalTriangleTest">
        <test-method signature="generateTest()[pri:0, instance:com.challenge.easy.dynamic.PascalTriangleTest@71c8becc]" started-at="2024-09-24T10:53:46 CST" name="generateTest" finished-at="2024-09-24T10:53:46 CST" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- generateTest -->
      </class> <!-- com.challenge.easy.dynamic.PascalTriangleTest -->
      <class name="com.challenge.easy.matrix.FlippingImageTest">
        <test-method signature="flipAndInvertImageTest()[pri:0, instance:com.challenge.easy.matrix.FlippingImageTest@a4102b8]" started-at="2024-09-24T10:53:46 CST" name="flipAndInvertImageTest" finished-at="2024-09-24T10:53:46 CST" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- flipAndInvertImageTest -->
      </class> <!-- com.challenge.easy.matrix.FlippingImageTest -->
      <class name="com.challenge.easy.hashtable.FirstUniqueCharTest">
        <test-method signature="firstUniqCharTest()[pri:0, instance:com.challenge.easy.hashtable.FirstUniqueCharTest@19d37183]" started-at="2024-09-24T10:53:46 CST" name="firstUniqCharTest" finished-at="2024-09-24T10:53:46 CST" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- firstUniqCharTest -->
      </class> <!-- com.challenge.easy.hashtable.FirstUniqueCharTest -->
      <class name="com.challenge.easy.arrays.FindFirstPalindromeTest">
        <test-method signature="firstPalindromeTest()[pri:0, instance:com.challenge.easy.arrays.FindFirstPalindromeTest@2b6856dd]" started-at="2024-09-24T10:53:46 CST" name="firstPalindromeTest" finished-at="2024-09-24T10:53:46 CST" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- firstPalindromeTest -->
      </class> <!-- com.challenge.easy.arrays.FindFirstPalindromeTest -->
      <class name="com.challenge.easy.binarysearch.KthMissingNumberTest">
        <test-method signature="findKthPositiveTest()[pri:0, instance:com.challenge.easy.binarysearch.KthMissingNumberTest@3745e5c6]" started-at="2024-09-24T10:53:46 CST" name="findKthPositiveTest" finished-at="2024-09-24T10:53:46 CST" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- findKthPositiveTest -->
      </class> <!-- com.challenge.easy.binarysearch.KthMissingNumberTest -->
      <class name="com.challenge.easy.recursion.FibonacciNumberTest">
        <test-method signature="fib()[pri:0, instance:com.challenge.easy.recursion.FibonacciNumberTest@69930714]" started-at="2024-09-24T10:53:46 CST" name="fib" finished-at="2024-09-24T10:53:46 CST" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- fib -->
      </class> <!-- com.challenge.easy.recursion.FibonacciNumberTest -->
      <class name="com.challenge.easy.math.MissingNumberTest">
        <test-method signature="missingNumberTest()[pri:0, instance:com.challenge.easy.math.MissingNumberTest@3bd40a57]" started-at="2024-09-24T10:53:46 CST" name="missingNumberTest" finished-at="2024-09-24T10:53:46 CST" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- missingNumberTest -->
      </class> <!-- com.challenge.easy.math.MissingNumberTest -->
      <class name="com.challenge.easy.math.RomanToIntegerTest">
        <test-method signature="romanToIntTest()[pri:0, instance:com.challenge.easy.math.RomanToIntegerTest@d83da2e]" started-at="2024-09-24T10:53:46 CST" name="romanToIntTest" finished-at="2024-09-24T10:53:46 CST" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- romanToIntTest -->
      </class> <!-- com.challenge.easy.math.RomanToIntegerTest -->
      <class name="com.challenge.easy.arrays.NumberOfGoodPairsTest">
        <test-method signature="numIdenticalPairsTest()[pri:0, instance:com.challenge.easy.arrays.NumberOfGoodPairsTest@60611244]" started-at="2024-09-24T10:53:46 CST" name="numIdenticalPairsTest" finished-at="2024-09-24T10:53:46 CST" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- numIdenticalPairsTest -->
      </class> <!-- com.challenge.easy.arrays.NumberOfGoodPairsTest -->
      <class name="com.challenge.easy.hashtable.UniqueNumberOfOccurrencesTest">
        <test-method signature="uniqueOccurrencesTest()[pri:0, instance:com.challenge.easy.hashtable.UniqueNumberOfOccurrencesTest@1a0dcaa]" started-at="2024-09-24T10:53:46 CST" name="uniqueOccurrencesTest" finished-at="2024-09-24T10:53:46 CST" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- uniqueOccurrencesTest -->
      </class> <!-- com.challenge.easy.hashtable.UniqueNumberOfOccurrencesTest -->
      <class name="com.challenge.easy.matrix.MatrixDiagonalSumTest">
        <test-method signature="diagonalSumTest()[pri:0, instance:com.challenge.easy.matrix.MatrixDiagonalSumTest@11dc3715]" started-at="2024-09-24T10:53:46 CST" name="diagonalSumTest" finished-at="2024-09-24T10:53:46 CST" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- diagonalSumTest -->
      </class> <!-- com.challenge.easy.matrix.MatrixDiagonalSumTest -->
      <class name="com.challenge.easy.math.PalindromeNumberTest">
        <test-method signature="isPalindromeTest()[pri:0, instance:com.challenge.easy.math.PalindromeNumberTest@fdefd3f]" started-at="2024-09-24T10:53:46 CST" name="isPalindromeTest" finished-at="2024-09-24T10:53:46 CST" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- isPalindromeTest -->
      </class> <!-- com.challenge.easy.math.PalindromeNumberTest -->
      <class name="com.challenge.easy.dfs.TreeInorderTraversalTest">
        <test-method signature="inorderTraversalTest1()[pri:0, instance:com.challenge.easy.dfs.TreeInorderTraversalTest@5e4c8041]" started-at="2024-09-24T10:53:46 CST" name="inorderTraversalTest1" finished-at="2024-09-24T10:53:46 CST" duration-ms="16" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- inorderTraversalTest1 -->
        <test-method signature="inorderTraversalTest3()[pri:0, instance:com.challenge.easy.dfs.TreeInorderTraversalTest@5e4c8041]" started-at="2024-09-24T10:53:46 CST" name="inorderTraversalTest3" finished-at="2024-09-24T10:53:46 CST" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- inorderTraversalTest3 -->
        <test-method signature="inorderTraversalTest2()[pri:0, instance:com.challenge.easy.dfs.TreeInorderTraversalTest@5e4c8041]" started-at="2024-09-24T10:53:46 CST" name="inorderTraversalTest2" finished-at="2024-09-24T10:53:46 CST" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- inorderTraversalTest2 -->
      </class> <!-- com.challenge.easy.dfs.TreeInorderTraversalTest -->
    </test> <!-- Surefire test -->
  </suite> <!-- Surefire suite -->
</testng-results>
