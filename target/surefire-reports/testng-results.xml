<?xml version="1.0" encoding="UTF-8"?>
<testng-results ignored="0" total="23" passed="23" failed="0" skipped="0">
  <reporter-output>
  </reporter-output>
  <suite started-at="2024-09-24T16:31:27 CST" name="Surefire suite" finished-at="2024-09-24T16:31:27 CST" duration-ms="127">
    <groups>
    </groups>
    <test started-at="2024-09-24T16:31:27 CST" name="Surefire test" finished-at="2024-09-24T16:31:27 CST" duration-ms="127">
      <class name="com.challenge.easy.string.SortingSentenceTest">
        <test-method signature="sortSentenceTest()[pri:0, instance:com.challenge.easy.string.SortingSentenceTest@501edcf1]" started-at="2024-09-24T16:31:27 CST" name="sortSentenceTest" finished-at="2024-09-24T16:31:27 CST" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- sortSentenceTest -->
      </class> <!-- com.challenge.easy.string.SortingSentenceTest -->
      <class name="com.challenge.easy.twopointer.ShortestDistanceToCharTest">
        <test-method signature="shortestToCharTest()[pri:0, instance:com.challenge.easy.twopointer.ShortestDistanceToCharTest@78b729e6]" started-at="2024-09-24T16:31:27 CST" name="shortestToCharTest" finished-at="2024-09-24T16:31:27 CST" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- shortestToCharTest -->
      </class> <!-- com.challenge.easy.twopointer.ShortestDistanceToCharTest -->
      <class name="com.challenge.easy.arrays.FindWordsContainingCharacterTest">
        <test-method signature="numIdenticalPairsTest()[pri:0, instance:com.challenge.easy.arrays.FindWordsContainingCharacterTest@79ca92b9]" started-at="2024-09-24T16:31:27 CST" name="numIdenticalPairsTest" finished-at="2024-09-24T16:31:27 CST" duration-ms="1" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- numIdenticalPairsTest -->
      </class> <!-- com.challenge.easy.arrays.FindWordsContainingCharacterTest -->
      <class name="com.challenge.easy.dynamic.PascalTriangleTest">
        <test-method signature="generateTest()[pri:0, instance:com.challenge.easy.dynamic.PascalTriangleTest@6e75aa0d]" started-at="2024-09-24T16:31:27 CST" name="generateTest" finished-at="2024-09-24T16:31:27 CST" duration-ms="3" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- generateTest -->
      </class> <!-- com.challenge.easy.dynamic.PascalTriangleTest -->
      <class name="com.challenge.easy.matrix.FlippingImageTest">
        <test-method signature="flipAndInvertImageTest()[pri:0, instance:com.challenge.easy.matrix.FlippingImageTest@add0edd]" started-at="2024-09-24T16:31:27 CST" name="flipAndInvertImageTest" finished-at="2024-09-24T16:31:27 CST" duration-ms="4" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- flipAndInvertImageTest -->
      </class> <!-- com.challenge.easy.matrix.FlippingImageTest -->
      <class name="com.challenge.easy.hashtable.FirstUniqueCharTest">
        <test-method signature="firstUniqCharTest()[pri:0, instance:com.challenge.easy.hashtable.FirstUniqueCharTest@7fc229ab]" started-at="2024-09-24T16:31:27 CST" name="firstUniqCharTest" finished-at="2024-09-24T16:31:27 CST" duration-ms="1" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- firstUniqCharTest -->
      </class> <!-- com.challenge.easy.hashtable.FirstUniqueCharTest -->
      <class name="com.challenge.easy.arrays.FindFirstPalindromeTest">
        <test-method signature="firstPalindromeTest()[pri:0, instance:com.challenge.easy.arrays.FindFirstPalindromeTest@d83da2e]" started-at="2024-09-24T16:31:27 CST" name="firstPalindromeTest" finished-at="2024-09-24T16:31:27 CST" duration-ms="16" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- firstPalindromeTest -->
      </class> <!-- com.challenge.easy.arrays.FindFirstPalindromeTest -->
      <class name="com.challenge.easy.binarysearch.KthMissingNumberTest">
        <test-method signature="findKthPositiveTest()[pri:0, instance:com.challenge.easy.binarysearch.KthMissingNumberTest@4f638935]" started-at="2024-09-24T16:31:27 CST" name="findKthPositiveTest" finished-at="2024-09-24T16:31:27 CST" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- findKthPositiveTest -->
      </class> <!-- com.challenge.easy.binarysearch.KthMissingNumberTest -->
      <class name="com.challenge.easy.recursion.FibonacciNumberTest">
        <test-method signature="fib()[pri:0, instance:com.challenge.easy.recursion.FibonacciNumberTest@7ea37dbf]" started-at="2024-09-24T16:31:27 CST" name="fib" finished-at="2024-09-24T16:31:27 CST" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- fib -->
      </class> <!-- com.challenge.easy.recursion.FibonacciNumberTest -->
      <class name="com.challenge.easy.math.MissingNumberTest">
        <test-method signature="missingNumberTest()[pri:0, instance:com.challenge.easy.math.MissingNumberTest@527e5409]" started-at="2024-09-24T16:31:27 CST" name="missingNumberTest" finished-at="2024-09-24T16:31:27 CST" duration-ms="2" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- missingNumberTest -->
      </class> <!-- com.challenge.easy.math.MissingNumberTest -->
      <class name="com.challenge.easy.math.RomanToIntegerTest">
        <test-method signature="romanToIntTest()[pri:0, instance:com.challenge.easy.math.RomanToIntegerTest@7ff95560]" started-at="2024-09-24T16:31:27 CST" name="romanToIntTest" finished-at="2024-09-24T16:31:27 CST" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- romanToIntTest -->
      </class> <!-- com.challenge.easy.math.RomanToIntegerTest -->
      <class name="com.challenge.easy.arrays.NumberOfGoodPairsTest">
        <test-method signature="numIdenticalPairsTest()[pri:0, instance:com.challenge.easy.arrays.NumberOfGoodPairsTest@1460a8c0]" started-at="2024-09-24T16:31:27 CST" name="numIdenticalPairsTest" finished-at="2024-09-24T16:31:27 CST" duration-ms="3" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- numIdenticalPairsTest -->
      </class> <!-- com.challenge.easy.arrays.NumberOfGoodPairsTest -->
      <class name="com.challenge.easy.string.JewelsAndStonesTest">
        <test-method signature="numJewelsInStonesTest()[pri:0, instance:com.challenge.easy.string.JewelsAndStonesTest@78dd667e]" started-at="2024-09-24T16:31:27 CST" name="numJewelsInStonesTest" finished-at="2024-09-24T16:31:27 CST" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- numJewelsInStonesTest -->
      </class> <!-- com.challenge.easy.string.JewelsAndStonesTest -->
      <class name="com.challenge.easy.string.ReverseWordsInStringIIITest">
        <test-method signature="reverseWordsTest()[pri:0, instance:com.challenge.easy.string.ReverseWordsInStringIIITest@10db82ae]" started-at="2024-09-24T16:31:27 CST" name="reverseWordsTest" finished-at="2024-09-24T16:31:27 CST" duration-ms="1" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- reverseWordsTest -->
      </class> <!-- com.challenge.easy.string.ReverseWordsInStringIIITest -->
      <class name="com.challenge.easy.string.DefangingIpAddressTest">
        <test-method signature="defangIPaddrTest()[pri:0, instance:com.challenge.easy.string.DefangingIpAddressTest@1d76aeea]" started-at="2024-09-24T16:31:27 CST" name="defangIPaddrTest" finished-at="2024-09-24T16:31:27 CST" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- defangIPaddrTest -->
      </class> <!-- com.challenge.easy.string.DefangingIpAddressTest -->
      <class name="com.challenge.easy.hashtable.UniqueNumberOfOccurrencesTest">
        <test-method signature="uniqueOccurrencesTest()[pri:0, instance:com.challenge.easy.hashtable.UniqueNumberOfOccurrencesTest@2cbb3d47]" started-at="2024-09-24T16:31:27 CST" name="uniqueOccurrencesTest" finished-at="2024-09-24T16:31:27 CST" duration-ms="1" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- uniqueOccurrencesTest -->
      </class> <!-- com.challenge.easy.hashtable.UniqueNumberOfOccurrencesTest -->
      <class name="com.challenge.easy.matrix.MatrixDiagonalSumTest">
        <test-method signature="diagonalSumTest()[pri:0, instance:com.challenge.easy.matrix.MatrixDiagonalSumTest@2aa3cd93]" started-at="2024-09-24T16:31:27 CST" name="diagonalSumTest" finished-at="2024-09-24T16:31:27 CST" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- diagonalSumTest -->
      </class> <!-- com.challenge.easy.matrix.MatrixDiagonalSumTest -->
      <class name="com.challenge.easy.math.PalindromeNumberTest">
        <test-method signature="isPalindromeTest()[pri:0, instance:com.challenge.easy.math.PalindromeNumberTest@1198b989]" started-at="2024-09-24T16:31:27 CST" name="isPalindromeTest" finished-at="2024-09-24T16:31:27 CST" duration-ms="1" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- isPalindromeTest -->
      </class> <!-- com.challenge.easy.math.PalindromeNumberTest -->
      <class name="com.challenge.easy.dfs.TreeInorderTraversalTest">
        <test-method signature="inorderTraversalTest1()[pri:0, instance:com.challenge.easy.dfs.TreeInorderTraversalTest@4387b79e]" started-at="2024-09-24T16:31:27 CST" name="inorderTraversalTest1" finished-at="2024-09-24T16:31:27 CST" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- inorderTraversalTest1 -->
        <test-method signature="inorderTraversalTest2()[pri:0, instance:com.challenge.easy.dfs.TreeInorderTraversalTest@4387b79e]" started-at="2024-09-24T16:31:27 CST" name="inorderTraversalTest2" finished-at="2024-09-24T16:31:27 CST" duration-ms="11" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- inorderTraversalTest2 -->
        <test-method signature="inorderTraversalTest3()[pri:0, instance:com.challenge.easy.dfs.TreeInorderTraversalTest@4387b79e]" started-at="2024-09-24T16:31:27 CST" name="inorderTraversalTest3" finished-at="2024-09-24T16:31:27 CST" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- inorderTraversalTest3 -->
      </class> <!-- com.challenge.easy.dfs.TreeInorderTraversalTest -->
      <class name="com.challenge.easy.string.CheckSentenceIsPangramTest">
        <test-method signature="checkIfPangramTest()[pri:0, instance:com.challenge.easy.string.CheckSentenceIsPangramTest@290d210d]" started-at="2024-09-24T16:31:27 CST" name="checkIfPangramTest" finished-at="2024-09-24T16:31:27 CST" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- checkIfPangramTest -->
      </class> <!-- com.challenge.easy.string.CheckSentenceIsPangramTest -->
      <class name="com.challenge.easy.string.BalancedStringTest">
        <test-method signature="balancedStringSplitTest()[pri:0, instance:com.challenge.easy.string.BalancedStringTest@4b44655e]" started-at="2024-09-24T16:31:27 CST" name="balancedStringSplitTest" finished-at="2024-09-24T16:31:27 CST" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- balancedStringSplitTest -->
      </class> <!-- com.challenge.easy.string.BalancedStringTest -->
    </test> <!-- Surefire test -->
  </suite> <!-- Surefire suite -->
</testng-results>
